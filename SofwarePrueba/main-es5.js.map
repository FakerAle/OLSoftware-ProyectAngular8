{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/shared/components/modal/modal.component.html","./src/app/app-routing.module.ts","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/components/posts/post.service.ts","./src/app/material.module.ts","./src/app/shared/components/modal/modal.component.css","./src/app/shared/components/modal/modal.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<router-outlet></router-outlet>\\r\\n<ngx-spinner bdColor=\\\"rgba(0, 0, 0, 0.8)\\\" size = \\\"large\\\" color=\\\"#fff\\\" type=\\\"ball-beat\\\" [fullScreen]=\\\"true\\\">\\r\\n    <p style=\\\"color: white; font-size: 36px;\\\"> Estamos preparando todo para ti </p>\\r\\n</ngx-spinner>\"","module.exports = \"<h1 mat-dialog-title>Agregar nuevo usuario</h1>\\n<form [formGroup]=\\\"newPostForm\\\" (ngSubmit)=\\\"addNewPost(newPostForm.value)\\\">\\n    <div mat-dialog-content>\\n        <div class=\\\"new-post-container\\\">\\n\\n            <div class=\\\"grid-container\\\">\\n                <div class=\\\"grid-item\\\">\\n                    <mat-form-field>\\n                        <mat-label>Nombre</mat-label>\\n                        <input matInput placeholder=\\\"Nombre\\\" formControlName=\\\"nombre\\\">\\n                    </mat-form-field>\\n                </div>\\n                <div class=\\\"grid-item\\\">\\n                    <mat-form-field>\\n                        <mat-label>Apellido</mat-label>\\n                        <input matInput placeholder=\\\"Apellido\\\" formControlName=\\\"apellido\\\">\\n                    </mat-form-field>\\n                </div>\\n                <div class=\\\"grid-item\\\">\\n                    <mat-form-field>\\n                        <mat-label>Identificación (C.C)</mat-label>\\n                        <input matInput placeholder=\\\"Identificación (C.C)\\\" formControlName=\\\"identificador\\\">\\n                    </mat-form-field>\\n                </div>\\n                <div class=\\\"grid-item\\\">\\n                    <mat-form-field>\\n                        <mat-label>Rol asociado</mat-label>\\n                        <input matInput placeholder=\\\"Rol asociado\\\" formControlName=\\\"rolAsociado\\\">\\n                    </mat-form-field>\\n                </div>\\n                <div class=\\\"grid-item\\\">\\n                    <mat-form-field>\\n                        <mat-label>Estado</mat-label>\\n                        <input matInput placeholder=\\\"Estado\\\" formControlName=\\\"estado\\\">\\n                    </mat-form-field>\\n                </div>\\n                <div class=\\\"grid-item\\\">\\n                    <mat-form-field>\\n                        <mat-label>contraseña</mat-label>\\n                        <input matInput placeholder=\\\"contraseña\\\" formControlName=\\\"pass\\\">\\n                    </mat-form-field>\\n                </div>\\n\\n                <div class=\\\"grid-item\\\">\\n                    <mat-form-field>\\n                        <mat-label>teléfono</mat-label>\\n                        <input matInput placeholder=\\\"teléfono\\\" formControlName=\\\"telefono\\\">\\n                    </mat-form-field>\\n                </div>\\n\\n                <div class=\\\"grid-item\\\">\\n                    <mat-form-field>\\n                        <mat-label>correo electrónico</mat-label>\\n                        <input matInput placeholder=\\\"correo electrónico\\\" formControlName=\\\"correo\\\">\\n                    </mat-form-field>\\n                </div>\\n            </div>\\n\\n        </div>\\n    </div>\\n    <div mat-dialog-actions align=\\\"center\\\">\\n        <button class=\\\"btn-primary\\\" type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\" [mat-dialog-close]=\\\"true\\\">Aceptar</button>\\n        <button mat-button [mat-dialog-close]=\\\"true\\\">Cancelar</button>\\n    </div>\\n</form>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [\n  { path: 'admin', loadChildren: () => import('./components/admin/admin.module').then(m => m.AdminModule) }, \n  { path: 'login', loadChildren: () => import('./components/auth/login/login.module').then(m => m.LoginModule) }, \n  { path: 'home', loadChildren: () => import('./components/pages/home/home.module').then(m => m.HomeModule) },\n  {\n    path: '',\n    redirectTo: 'login',\n    pathMatch: 'full'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { NgxSpinnerService } from \"ngx-spinner\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n  title = 'SofwarePrueba';\n\n  constructor(private spinner: NgxSpinnerService) {}\n\n  ngOnInit() {\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MaterialModule } from './material.module';\n\n/* Firebase */\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\nimport { AngularFireStorageModule, StorageBucket } from '@angular/fire/storage';\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFireAuthModule } from '@angular/fire/auth';\n\nimport { ReactiveFormsModule } from '@angular/forms';\n\n\nimport { environment } from '../environments/environment';\nimport { ModalComponent } from './shared/components/modal/modal.component';\n\n/* Spinner ngx */\nimport { NgxSpinnerModule } from \"ngx-spinner\";\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ModalComponent,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AngularFireModule.initializeApp(environment.firebaseConfig),\n    AngularFirestoreModule,\n    AngularFireStorageModule,\n    AppRoutingModule,\n    MaterialModule,\n    AngularFireAuthModule,\n    ReactiveFormsModule,\n    NgxSpinnerModule\n\n  ],\n  entryComponents: [ModalComponent],\n  providers: [\n    { provide: StorageBucket, useValue: 'gs://ngblog-98663.appspot.com' }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }","import { Injectable } from '@angular/core';\nimport { AngularFirestore, AngularFirestoreCollection } from '@angular/fire/firestore';\nimport { Observable } from 'rxjs';\nimport { map, finalize } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostService {\n\n  private collectionUsers: AngularFirestoreCollection<any>;\n\n  constructor(private afs: AngularFirestore) {\n    this.collectionUsers = afs.collection<any>('usuarios');\n  }\n\n  public obtenerUsuarios(): Observable<any> {\n    return this.collectionUsers\n      .snapshotChanges()\n      .pipe(\n        map(actions =>\n          actions.map(a => {\n            const data = a.payload.doc.data() as any;\n            const idFireBase = a.payload.doc.id;\n            return { idFireBase, ...data };\n          })\n        )\n      );\n  }\n\n  public guardarFireBase(post: any) {\n    const postObj = {\n      nombre: post.nombre,\n      apellido: post.apellido,\n      identificador: post.identificador,\n      rolAsociado: post.rolAsociado,\n      estado: post.estado,\n      pass: post.pass,\n      telefono: post.telefono,\n      correo: post.correo,\n    };\n\n    //if (postObj.id) {\n    //  return this.postsCollection.doc(\"cA7RxZgicoLt5ZpcKx04\").update(postObj);\n    //} else {\n    return this.collectionUsers.add(postObj);\n    //}\n\n  }\n\n  public eliminarUsuario(id: any) {\n    return this.collectionUsers.doc(id).delete();\n  }\n}\n","\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatGridListModule } from '@angular/material/grid-list';\n\n\n\nconst myModule = [\n  MatCardModule,\n  MatButtonModule,\n  MatMenuModule,\n  MatToolbarModule,\n  MatIconModule,\n  MatSidenavModule,\n  MatListModule,\n  MatProgressSpinnerModule,\n  MatDividerModule,\n  MatChipsModule,\n  MatInputModule,\n  MatFormFieldModule,\n  MatTableModule,\n  MatPaginatorModule,\n  MatSortModule,\n  MatDialogModule,\n  MatSelectModule,\n  MatTableModule,\n  MatPaginatorModule,\n  MatTooltipModule,\n  MatGridListModule,\n];\n\n@NgModule({\n  declarations: [],\n  imports: [CommonModule, myModule],\n  exports: [myModule]\n})\nexport class MaterialModule { }\n","module.exports = \".grid-container {\\r\\n    display: grid;\\r\\n    grid-gap: 50px 100px;\\r\\n    grid-template-columns: auto auto;\\r\\n    padding: 10px;\\r\\n  }\\r\\n  \\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2hhcmVkL2NvbXBvbmVudHMvbW9kYWwvbW9kYWwuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGFBQWE7SUFDYixvQkFBb0I7SUFDcEIsZ0NBQWdDO0lBQ2hDLGFBQWE7RUFDZiIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL21vZGFsL21vZGFsLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZ3JpZC1jb250YWluZXIge1xyXG4gICAgZGlzcGxheTogZ3JpZDtcclxuICAgIGdyaWQtZ2FwOiA1MHB4IDEwMHB4O1xyXG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiBhdXRvIGF1dG87XHJcbiAgICBwYWRkaW5nOiAxMHB4O1xyXG4gIH1cclxuICBcclxuIl19 */\"","\nimport { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { PostService } from '../../../components/posts/post.service';\n@Component({\n  selector: 'app-modal',\n  templateUrl: './modal.component.html',\n  styleUrls: ['./modal.component.css']\n})\nexport class ModalComponent implements OnInit {\n\n  constructor(public dialog: MatDialogRef<ModalComponent>, private servicioFireBase: PostService,\n\n    @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  ngOnInit() {\n  }\n\n  public newPostForm = new FormGroup({\n    nombre: new FormControl('', Validators.required),\n    apellido: new FormControl('', Validators.required),\n    identificador: new FormControl('', Validators.required),\n    rolAsociado: new FormControl('', Validators.required),\n    estado: new FormControl('', Validators.required),\n    pass: new FormControl('', Validators.required),\n    telefono: new FormControl('', Validators.required),\n    correo: new FormControl('', Validators.required),\n  });\n\n  addNewPost(usuario: any) {\n    console.log(usuario);\n    if(usuario.identificador != undefined && usuario.identificador != null  && usuario.identificador != \"\"){\n      this.servicioFireBase.guardarFireBase(usuario);\n    }\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n    firebaseConfig :{\n    apiKey: \"AIzaSyCNa8LnqoWUuWSwEp6aovDgBF56Ftz629E\",\n    authDomain: \"ngblog-98663.firebaseapp.com\",\n    projectId: \"ngblog-98663\",\n    storageBucket: \"ngblog-98663.appspot.com\",\n    messagingSenderId: \"789995662071\",\n    appId: \"1:789995662071:web:50a1aabb1a4de31a8601f2\",\n    measurementId: \"G-TC9XH1RNB0\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}